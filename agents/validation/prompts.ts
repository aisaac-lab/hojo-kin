export const validationPrompts = {
  progressiveHints: {
    level1: `基本的な改善指示：
- ユーザーの質問に直接回答する
- 必要な情報をすべて含める
- 正確なデータを使用する
- 適切なフォローアップを提供する`,

    level2: `詳細な改善指示と具体例：
- 質問の核心を特定し、最初に回答を提示
- 例：「東京都の補助金は？」→「東京都で申請可能な補助金は○件です」で開始
- データ検索時は複数のキーワードを試す
- 例：「スタートアップ」→「創業」「起業」「新事業」も検索
- 各補助金にマッチ度スコアと内訳を表示
- 例：（マッチ度: 85点/100点）内訳：地域(30/30)、カテゴリー(25/25)...`,

    level3: `テンプレートと完全な例を含む指示：
【回答テンプレート】
1. 冒頭：「申請可能な補助金は○○件です。」
2. 本文：「補助金の一部として以下のようなものがあります。」
3. 各補助金の形式：
   **補助金名**（マッチ度: ○点/○点）
   内訳：地域(○/○)、カテゴリー(○/○)、金額(○/○)、企業規模(○/○)
   - 対象者：具体的な条件
   - 補助金額：上限と補助率
   - なぜ適しているか：具体的理由
   - [公式サイトで詳細を見る](実際のURL)
4. 締め：追加質問で条件を絞り込む提案`
  },

  failureAnalysis: `失敗パターン分析：
1. 同じ補助金の繰り返し
   → 異なるカテゴリーやキーワードで再検索
2. マッチ度スコアの欠如
   → 必ず各補助金に点数と内訳を追加
3. 総数の未記載
   → 冒頭で必ず「○○件の補助金が見つかりました」
4. URLの誤り
   → front_subsidy_detail_page_urlフィールドから正確に取得
5. 既出補助金の再提案
   → コンテキストの既出リストを確認して除外`,

  validationCriteria: `検証基準の詳細：
【関連性（relevance）】
- 質問の意図を正確に理解しているか
- 余計な情報を含んでいないか
- 優先順位は適切か

【完全性（completeness）】
- 必要な情報がすべて含まれているか
- 5件の補助金を提案しているか（3-4件は不可）
- 追加質問が適切か

【データ正確性（dataAccuracy）】
- subsidies-master.jsonから正確に抽出
- URLは実在のものか（example.com不可）
- 金額・条件は正確か
- 多様な補助金を提案しているか

【フォローアップ（followUp）】
- 次のアクションが明確か
- 絞り込み提案は適切か
- 対話的なトーンか`,

  regenerationInstructions: `再生成指示の生成方法：
1. 最低スコアのカテゴリーを特定
2. 具体的な改善点を3つ以上提示
3. 成功例を1つ以上含める
4. 避けるべきパターンを明示
5. 検索キーワードの提案を含める`,

  loopControl: `フィードバックループ制御：
1. 最大3回まで再生成を試行
2. スコアが10点以上改善したら成功
3. 2回連続で同じエラーなら終了
4. 各ループの結果を記録
5. 最良の結果を最終回答として採用`
};